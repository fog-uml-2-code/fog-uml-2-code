## This file contains the settings to customize code generation
##
## Every property can be set individually for each generated module
## using the form: codegen.<ModuleName>.<PropertyName>
## <ModuleName> is the name of the classifier that defines the module's name (the name of the REST interface or the controller class)
## or in case of an ActivityRealization, the name of the activity.
## e.g., codegen.bloodpressuresensor.sleep_after_each_request_for_msec = 1000
## This sets the sleep_after_each_request_for_msec setting for the module bloodpressuresensor to true.
## The default settings begin with codegen.default.

## Defines the number of bits of the default integer data type. Possible values are: 8, 16, 32, and 64
## Default: 32
codegen.default.default_int_bits = 32

## Example for overriding for the module temperaturesensor
## codegen.temperaturesensor.default_int_bits = 16


## If enabled (not zero), a single precision floating point data type will be used for floating point numbers,
## otherwise a double precision floating point type will be used.
## Default: 0 (double precision floating point type)
codegen.default.small_real = 0

## Example for overriding for the module temperaturesensor
## codegen.temperaturesensor.small_real = 1


## Defines the port on which the REST server (if any) should listen.
codegen.default.listen_port = 8080

## Example for overriding for the module temperaturesensor
codegen.default.listen_port = 8081


## Tells the device to go into sleep mode for n milliseconds after each request.
## Default: 0 (no sleep)
codegen.default.sleep_after_each_request_for_msec = 0

## Example for overriding for the module temperaturesensor
## codegen.temperaturesensor.sleep_after_each_request_for_msec = 1000


