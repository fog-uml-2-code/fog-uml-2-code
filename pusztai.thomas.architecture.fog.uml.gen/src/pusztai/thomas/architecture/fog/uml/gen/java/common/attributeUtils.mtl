[comment encoding = UTF-8 /]
[module attributeUtils('http://www.eclipse.org/uml2/5.0.0/UML')]

[import pusztai::thomas::architecture::fog::uml::gen::services::javaTypeServices /]
[import pusztai::thomas::architecture::fog::uml::gen::services::fogUmlServices/]

[**
 * Generates the private fields for all attributes of the specified class.
 */]
[template public genAllPropertyFields(class : Class)]
[for (prop : Property | class.getAllAttributesWithAssociations())]
[prop.genProperty()/]

[/for]
[/template]


[**
 * Generates the private field for an attribute.
 */]
[template public genProperty(prop : Property)]
private [prop.getTypeName()/] [prop.name.toLowerFirst()/];
[/template]


[**
 * Generates the getters and setters for all non-private attributes of the specified class.
 */]
[template public genAllPropertyAccessors(class : Class)]
[for (prop : Property | class.getAllAttributesWithAssociations())]
[prop.genGetter()/]
[prop.genSetter()/]
[/for]
[/template]


[**
 * Generates the getter for an attribute if it is not private.
 */]
[template public genGetter(prop : Property)]
/**
 * @return the [prop.name/]
 * 
 * @generated
 */
[if (prop.visibility <> VisibilityKind::private)][prop.visibility.toString()/] [prop.getTypeName()/] get[prop.name.toUpperFirst()/]() {
	return [prop.name.toLowerFirst()/];
}
[/if]
[/template]


[**
 * Generates the setter for an attribute if it is not private.
 */]
[template public genSetter(prop : Property)]
/**
 * @param [prop.name.toLowerFirst()/] the [prop.name/] to set.
 * 
 * @generated
 */
[if (prop.visibility <> VisibilityKind::private)][prop.visibility.toString()/] void set[prop.name.toUpperFirst()/]([prop.getTypeName()/] [prop.name.toLowerFirst()/]) {
	this.[prop.name.toLowerFirst()/] = [prop.name.toLowerFirst()/];
}
[/if]
[/template]
